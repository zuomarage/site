{% comment %}
  Â© Sections Pro. You are free to use this section in your store. You may not redistribute this section in another Shopify app.
{% endcomment %}
<style>

  {{ section.settings.text_font | font_face }}
  {{ section.settings.headline_font | font_face }}
  {% assign short_id = section.id | slice: -3, 3 %}

  #sp-tiles-{{ section.id }}.sp-tiles-wrap p,
  #sp-tiles-{{ section.id }}.sp-tiles-wrap p a {
    font-size: {{ section.settings.text_size }}px;
    font-family: {{ section.settings.text_font.family }}, {{ section.settings.text_font.fallback_families }};
    font-weight: {{ section.settings.text_font.weight }};
    line-height: 1.15;
  }

  #sp-tiles-{{ section.id }}.sp-tiles-wrap h2 {
    font-size: {{ section.settings.headline_size }}px;
    font-family: {{ section.settings.headline_font.family }}, {{ section.settings.headline_font.fallback_families }};
    font-weight: {{ section.settings.headline_font.weight }};
    line-height: 1.15;
  }

  #sp-tiles-{{ section.id }}.sp-tiles-wrap {
    background-image: {{ section.settings.background_color }};
    width: 100%;
  }


  #sp-tiles-{{ section.id }} .sp-tiles {
    position: relative;
    margin: 0 auto;
    max-width: {{ section.settings.max_width }}px;
    padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px;
  }

  #sp-tiles-{{ section.id }}  .sp-tiles .sp-tiles-grid {
    display: grid;
    align-items: center;
    gap: {{ section.settings.grid_gap}}px;
    position: relative;
    z-index: 2;
  }

  @media only screen and (min-width: 801px) {
    #sp-tiles-{{ section.id }} .sp-tiles .sp-tiles-grid {
      display: grid;
      grid-template-columns: 60% 1fr;
    }

    #sp-tiles-{{ section.id }} .sp-tiles .sp-tiles-grid .sp-tiles-tile:first-child {
      grid-row: 1 / {{ section.blocks.size }};
    }
  }

  @media only screen and (max-width: 800px) {
    #sp-tiles-{{ section.id }} .sp-tiles .sp-tiles-grid {
      display: grid;
      grid-auto-columns: 100%;
      grid-auto-flow: column;
      width: 100%;
      overflow-x: scroll;
      scroll-snap-type: x mandatory;
    }

    #sp-tiles-{{ section.id }} .sp-tiles .sp-tiles-grid::-webkit-scrollbar { 
      display: none;  /* Safari and Chrome */
    }

    #sp-tiles-{{ section.id }} .sp-tiles-tile {
      scroll-snap-align: start;
    }
  }

  #sp-tiles-{{ section.id }}  .sp-tiles .sp-tiles-cover {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 2;
    width: 100%;
    height: 100%;
    background-image: {{section.settings.cover_background}};
    opacity: {{section.settings.cover_opacity}}%;
    transition: all .5s;
  }

  #sp-tiles-{{ section.id }}  .sp-tiles-tile:hover .sp-tiles-cover {
    opacity: {{section.settings.cover_opacity | plus: 15 }}%;
  }

  #sp-tiles-{{ section.id }} .sp-tiles-tile {
    display: block;
    position: relative;
    min-height: {{ section.settings.tile_height }}px;
    height: 100%;
    padding: 0;
    overflow: hidden;
    border-radius: {{ section.settings.media_radius }}px;
    {% if section.settings.media_shadow %}box-shadow: 0 0 5px 0 rgba(0,0,0,0.20);{% endif %}
  }

  #sp-tiles-{{ section.id }} .sp-tiles-img {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 1;
    transition: all .5s;
  }

  #sp-tiles-{{ section.id }} .sp-tiles-tile:hover .sp-tiles-img {
    transform: scale(1.2);
  }
  
  #sp-tiles-{{ section.id }} .sp-tiles-content {
    z-index: 3;
    padding: 15px;
    background-size: cover;
    background-position: center;
    position: absolute;
    bottom: 0;
    left: 0;
  }

  #sp-tiles-{{ section.id }} .sp-tiles h2 {
    margin: 0 0 5px 0;
    padding: 0;
    color: {{ section.settings.headline_color }};
    text-shadow: 0 2px 4px rgba(0,0,0,0.25);
    text-align: left;
  }

  #sp-tiles-{{ section.id }} .sp-tiles p {
    margin: 0;
    padding: 0;
    color: {{ section.settings.text_color }};
    text-shadow: 0 2px 4px rgba(0,0,0,0.25);
    text-align: left;
  }


  #sp-tiles-{{ section.id }} .sp-tiles p {
    margin: 0;
    padding: 0;
    text-align: left;
  }

  /* carousel */
  #sp-tiles-{{ section.id }} .sp-tiles-snap-links {
    padding: 0;
}

  #sp-tiles-snap-links-{{ section.id }} a {
      display: inline-block;
      background-color: {{ section.settings.highlight_color }};
      width: 12px;
      height: 12px;
      border-radius: 50%;
      text-indent: -9999px;
      padding: 0;
      margin: 0 2.5px; 
      cursor: pointer;
      opacity: 0.25;
  }

  #sp-tiles-snap-links-{{ section.id }} a[active] {
      background-color: {{ section.settings.highlight_color }};
      opacity: 1;
  }

  #sp-tiles-snap-links-{{ section.id }} {
    display: none;
  }

  @media only screen and (max-width: 800px) {
    #sp-tiles-snap-links-{{ section.id }} {
      display: block;
      text-align: center;
    }
  }
</style>

<div id="sp-tiles-{{ section.id }}" class="sp-tiles-wrap">

<div class="sp-tiles">

  <div id="sp-tiles-grid-{{ section.id }}" class="sp-tiles-grid">

    {% for block in section.blocks %}
      <{% if block.settings.link %}a{% else %}div{% endif %} id="sp-tiles-block-{{ section.id }}-{{ forloop.index }}" data-index="{{ forloop.index | minus: 1 }}" {% if block.settings.link %}href="{{ block.settings.link }}"{% endif %} class="sp-tiles-tile">
        <img loading="lazy" class="sp-tiles-img"
          src="{{ block.settings.background_image | image_url: width: 600 }}"
          srcset="{{ block.settings.background_image| image_url: width: 600 }} 600w,
            {{ block.settings.background_image | image_url: width: 800 }} 800w,
            {{ block.settings.background_image | image_url: width: 1000 }} 1000w,
            {{ block.settings.background_image | image_url: width: 1100 }} 1100w">
        <div class="sp-tiles-cover"></div>
        <div class="sp-tiles-content">
          <h2>{{ block.settings.headline }}</h2>
          {% if block.settings.text %}<p>{{ block.settings.text }}</p>{% endif %} 
        </div>
      </{% if block.settings.link %}a{% else %}div{% endif %}>
      <!-- /.sp-tiles-col -->

      {% endfor %}

  </div>
  <!-- /.sp-tiles-grid -->

  <div id="sp-tiles-snap-links-{{ section.id }}" class="sp-tiles-snap-links">
    {% for block in section.blocks %}
      <a {% if forloop.index == 1 %}active{% endif %} data-index="{{ forloop.index | minus: 1 }}"></a>
    
    {% endfor %}
  </div>
  
</div>
<!-- /.sp-tiles -->

</div>
<!-- /.sp-tiles-wrap -->

<script>
  
  // set mobile slideshow
  if(screen.width <= 800 ) {

    var section_{{ short_id }} = document.querySelector('#sp-tiles-{{ section.id }}');
    var carousel_{{ short_id }} = document.querySelector('#sp-tiles-grid-{{ section.id }}');
    var autoplay_{{ short_id }} = {{ section.settings.autoplay_time }};
    var index_{{ short_id }} = 0;
    var tiles_{{ short_id }} = section_{{ short_id }}.querySelectorAll('.sp-tiles-tile');
    var links_{{ short_id }} = section_{{ short_id }}.querySelectorAll('.sp-tiles-snap-links a');

    {% if section.settings.enable_autoplay == true %}

      // setup autoplay
      interval_{{ short_id }} = setInterval(function() {

        // handle next
        index_{{ short_id }}++;

        // get tile
        var tile = tiles_{{ short_id }}[index_{{ short_id }}];

        if(tile) {
          tile.scrollIntoView({
            behavior: 'smooth', block: 'nearest', inline: 'start'
          });
        }
        else {
          clearInterval(interval_{{ short_id }});
        }

      }, autoplay_{{ short_id }});

      carousel_{{ short_id }}.addEventListener('mousedown', (e) => {
        if(interval_{{ short_id }}) clearInterval(interval_{{ short_id }});
      });

      carousel_{{ short_id }}.addEventListener('touchstart', (e) => {
        if(interval_{{ short_id }}) clearInterval(interval_{{ short_id }});
      });

    {% endif %}

    for(var x=0; x<links_{{ short_id }}.length; x++) {

      // handle click of links
      links_{{ short_id }}[x].addEventListener('click', (e) => {

          // clear interval
          if(interval_{{ short_id }}) clearInterval(interval_{{ short_id }});

          var index = e.target.getAttribute(`data-index`);

          var tile = tiles_{{ short_id }}[index];
          tile.scrollIntoView({
            behavior: 'smooth', block: 'nearest', inline: 'start'
          });

          e.preventDefault();
      });
    }

    // use intersection observer to render dots
    var observer = new IntersectionObserver(function(entries, observer) {

      // find the entry with the largest intersection ratio
      var activated = entries.reduce(function (max, entry) {
        return (entry.intersectionRatio > max.intersectionRatio) ? entry : max;
      });
      if (activated.intersectionRatio > 0) {
        var index = activated.target.getAttribute('data-index') || 0;

        // set active
        for(var y=0; y<links_{{ short_id }}.length; y++) links_{{ short_id }}[y].removeAttribute('active');
        if(links_{{ short_id }}[index_{{ short_id }}]) links_{{ short_id }}[index].setAttribute('active', '');
      }
    }, {
      root: carousel_{{ short_id }}, threshold:0.5
    });

    for (var i = 0; i < tiles_{{ short_id }}.length; i++) {
      observer.observe(tiles_{{ short_id }}[i]);
    }

  }

</script>

{% schema %}
  {
    "name": "ðŸš€SP - Tiles",
    "settings": [
      {
        "type": "header",
        "content": "Text",
        "info": "Set the text size for your widget"
      },
      {
        "type": "font_picker",
        "id": "text_font",
        "label": "Text Font",
        "default": "sans-serif"
      },
      {
        "type": "range",
        "id": "text_size",
        "min": 10,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Text Size",
        "default": 15
      },
      {
        "type": "font_picker",
        "id": "headline_font",
        "label": "Headline Font",
        "default": "sans-serif"
      },
      {
        "type": "range",
        "id": "headline_size",
        "min": 10,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Headline Size",
        "default": 25
      },
      {
        "type": "header",
        "content": "Colors",
        "info": "Set colors for the section."
      },
      {
        "type": "color_background",
        "id": "background_color",
        "default": "linear-gradient(164deg, #fff 0%, #fff 0%)",
        "label": "Background"
      },
      {
        "type": "color_background",
        "id": "cover_background",
        "default": "linear-gradient(164deg, #111 0%, #555 100%)",
        "label": "Cover Background"
      },
      {
        "type": "range",
        "id": "cover_opacity",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "%",
        "label": "Cover Opacity",
        "default": 25
      },
      {
        "type": "color",
        "id": "headline_color",
        "default": "#fff",
        "label": "Headline Color"
      },
      {
        "type": "color",
        "id": "text_color",
        "default": "#fff",
        "label": "Text Color"
      },
      {
        "type": "color",
        "id": "highlight_color",
        "default": "#111",
        "label": "Highlight Color"
      },
      {
        "type": "header",
        "content": "Dimensions",
        "info": "Set the section dimensions in pixels."
      },
      {
        "type": "number",
        "id": "tile_height",
        "default": 250,
        "label": "Height of Tiles"
      },
      {
        "type": "number",
        "id": "max_width",
        "default": 1000,
        "label": "Max Width of Section"
      },
      {
        "type": "number",
        "id": "grid_gap",
        "default": 20,
        "label": "Gap Between Tiles"
      },
      {
        "type": "number",
        "id": "padding_top",
        "default": 25,
        "label": "Padding Top"
      },
      {
        "type": "number",
        "id": "padding_bottom",
        "default": 25,
        "label": "Padding Bottom"
      },
      {
        "type": "number",
        "id": "padding_left",
        "default": 10,
        "label": "Padding Left"
      },
      {
        "type": "number",
        "id": "padding_right",
        "default": 10,
        "label": "Padding Right"
      },
      {
        "type": "header",
        "content": "Design",
        "info": "Set the design for your grid"
      },
      {
        "type": "range",
        "id": "media_radius",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Round Borders on Media",
        "default": 5
      },
      {
        "type": "checkbox",
        "id": "media_shadow",
        "default": true,
        "label": "Subtle Shadow on Media"
      },
      {
        "type": "header",
        "content": "Slideshow (mobile only)",
        "info": "Update the slideshow settings on mobile"
      },
      {
        "type": "checkbox",
        "id": "enable_autoplay",
        "default": true,
        "label": "Enable Autoplay?"
      },
      {
        "type": "select",
        "id": "autoplay_time",
        "label": "Autoplay Time",
        "options": [
          {
            "value": "10000",
            "label": "Slowest (10s)"
          },
          {
            "value": "7500",
            "label": "Slower (7.5s)"
          },
          {
            "value": "5000",
            "label": "Normal (5s)"
          },
          {
            "value": "3000",
            "label": "Faster (3s)"
          },
          {
            "value": "2000",
            "label": "Fastest (2s)"
          }
        ],
        "default": "5000"
      }
    ],
	"blocks": [
      {
       "name": "Tile",
       "type": "tile",
       "settings": [
         
          {
            "type": "image_picker",
            "id": "background_image",
            "label": "Background Image"
          },
          {
            "type": "inline_richtext",
            "id": "headline",
            "label": "Headline",
            "default": "Feature Headline"
          },
          {
            "type": "inline_richtext",
            "id": "text",
            "label": "Text (optional)"
          },
          {
            "type": "url",
            "id": "link",
            "label": "Tile link (optional)"
          }
       ]
      }
    ],
	"presets": [
      {
        "name": "ðŸš€SP - Tiles"
      }
    ]
  }
{% endschema %}