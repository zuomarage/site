{% comment %}
  Â© Sections Pro. You are free to use this section in your store. You may not redistribute this section in another Shopify app.
{% endcomment %}
<style>

  {{ section.settings.text_font | font_face }}
  {{ section.settings.headline_font | font_face }}

  {% assign short_id = section.id | slice: -3, 3 %}

  @keyframes slpProgressBar {
    0% { width: 0; }
    100% { width: 100%; }
  }

  #sp-slt-{{ section.id }}.sp-slt-wrap p,
  #sp-slt-{{ section.id }}.sp-slt-wrap p a {
    font-size: {{ section.settings.text_size }}px;
    font-family: {{ section.settings.text_font.family }}, {{ section.settings.text_font.fallback_families }};
    font-weight: {{ section.settings.text_font.weight }};
    line-height: 1.15;
  }

  #sp-slt-{{ section.id }}.sp-slt-wrap h2 {
    font-size: {{ section.settings.headline_size }}px;
    font-family: {{ section.settings.headline_font.family }}, {{ section.settings.headline_font.fallback_families }};
    font-weight: {{ section.settings.headline_font.weight }};
    line-height: 1.15;
  }

  #sp-slt-{{ section.id }}.sp-slt-wrap {
    background-image: {{section.settings.background_color}};
    width: 100%;
  }

  #sp-slt-{{ section.id }} .sp-slt-grid {
    position: relative;
    margin: 0 auto;
    max-width: {{ section.settings.max_width }}px;
    padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px;
  }

  #sp-slt-{{ section.id }} .sp-slt-grid-left .sp-slt-column-slideshow {
    grid-column: 1;
    grid-row: 1;
  }
  
  #sp-slt-{{ section.id }} .sp-slt-grid-left .sp-slt-column-text {
    grid-column: 2;
    grid-row: 1;
  }

  #sp-slt-{{ section.id }} .sp-slt-grid-right .sp-slt-column-slideshow {
    grid-column: 2;
    grid-row: 1;
  }
  
  #sp-slt-{{ section.id }} .sp-slt-grid-right .sp-slt-column-text {
    grid-column: 1;
    grid-row: 1;
  }
  
  #sp-slt-{{ section.id }} .sp-slt-grid-left {
    display: grid;
    {% if section.settings.media_aspect_ratio == "21 / 9" %}
    grid-template-columns: 3fr 1fr;
    {% elsif section.settings.media_aspect_ratio == "16 / 9"%}
    grid-template-columns: 2fr 1fr;
    {% else %}
    grid-template-columns: 1fr 1fr;
    {% endif %}
    align-items: center;
    gap: 30px;
  }

  #sp-slt-{{ section.id }} .sp-slt-grid-right {
    display: grid;
    {% if section.settings.media_aspect_ratio == "21 / 9" %}
    grid-template-columns: 1fr 3fr;
    {% elsif section.settings.media_aspect_ratio == "16 / 9"%}
    grid-template-columns: 1fr 2fr;
    {% else %}
    grid-template-columns: 1fr 1fr;
    {% endif %}
    align-items: center;
    gap: 20px;
  }

  @media only screen and (max-width: 900px) {
    #sp-slt-{{ section.id }} .sp-slt-grid {
      display: block;
    }
  }

  @media only screen and (max-width: 900px) {
    #sp-slt-{{ section.id }} .sp-slt-column {
      padding: 5px 0;
    }
  }

  #sp-slt-{{ section.id }} .sp-slt-grid h2, 
  #sp-slt-{{ section.id }} .sp-slt-grid p {
    text-align: center;
    margin: 0 0 25px 0 !important;
    padding: 0 !important;
    color: {{ section.settings.text_color }};
  }

  #sp-slt-{{ section.id }} .sp-slt-grid p:last-child {
    margin: 0 !important;
    padding: 0;
  }

  #sp-slt-{{ section.id }} a.sp-slt-cta {
    display: inline-block;
    padding: {{ section.settings.button_padding_tb }}px {{ section.settings.button_padding_lr }}px;
    background-image: {{ section.settings.button_background_color }};
    border-radius: {{ section.settings.button_border_radius }}px;
    color: {{ section.settings.button_text_color }};
    font-size: {{ section.settings.button_text_size }}px;
    text-decoration: none;
    cursor: pointer;
    font-weight: bold;
    text-shadow: none;
  }

  #sp-slt-{{ section.id }} .sp-slt-carousel {
    display: grid;
    grid-auto-columns: 100%;
    grid-auto-flow: column;
    width: 100%;
    overflow-x: scroll;
    scroll-snap-type: x mandatory;
    border-radius: {{ section.settings.media_radius }}px;
    {% if section.settings.media_shadow %}box-shadow: 0 0 5px 0 rgba(0,0,0,0.20);{% endif %}
    margin: 0;
    padding: 0;
    position: relative;
  }

  #sp-slt-{{ section.id }} .sp-slt-carousel::-webkit-scrollbar { 
    display: none;  /* Safari and Chrome */
  }

  #sp-slt-{{ section.id }} .sp-slt-carousel .sp-slt-slide {
    scroll-snap-align: start;
    position: relative;
  }

  #sp-slt-{{ section.id }} .sp-slt-slide {
      position: relative;
      width: 100%;
  }

  #sp-slt-{{ section.id }} .sp-slt-content video {
    position: relative;
    width: 100%;
    height: 100%;
    object-fit: cover;
    aspect-ratio: {{ section.settings.media_aspect_ratio }};
    display: block;
  }

  #sp-slt-{{ section.id }} .sp-slt-content img {
    position: relative;
    width: 100%;
    height: 100%;
    object-fit: cover;
    aspect-ratio: {{ section.settings.media_aspect_ratio }};
    display: block;
  }

  #sp-slt-{{ section.id }} .sp-slt-slide-text {
     box-sizing: border-box;
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      z-index: 2;
      background: {{ section.settings.caption_background_color }};
      padding: 10px;
  }

    #sp-slt-{{ section.id }} .sp-slt-slide-text p {
      color: {{ section.settings.caption_text_color }};
      font-weight: normal;
      margin: 0;
      padding: 10px 20px;
      text-align: center;
    }

    #sp-slt-{{ section.id }} .sp-slt-slide-text p a,
    #sp-slt-{{ section.id }} .sp-slt-slide-text p a:visited {
    font-weight: bold;
    text-decoration: underline;
      color: {{ section.settings.text_color }};
  }

  #sp-slt-{{ section.id }} .sp-slt-snap-links {
      display: block;
      width: 100%;
      padding: 10px 10px 0 10px;
      margin: 0;
      text-align: center;
  }

  #sp-slt-{{ section.id }} .sp-slt-snap-links a {
      display: inline-block;
      background-color: {{ section.settings.indicator_color }};
      width: 12px;
      height: 12px;
      border-radius: 50%;
      text-indent: -9999px;
      padding: 0;
      margin: 0 2.5px;
      cursor: pointer;
      opacity: 0.25;
  }

  #sp-slt-{{ section.id }} .sp-slt-snap-links a:hover {
      {{ section.settings.indicator_color }};
      opacity:1;
  }

  #sp-slt-{{ section.id }} .sp-slt-snap-links a[active] {
      {{ section.settings.indicator_color }};
    opacity:1;
  }

  #sp-slt-{{ section.id }}[autoplaying] #sp-slt-snap-links-{{ section.id }} a[active] {
    background: {{ section.settings.progress_background_color }};
    opacity: 1;
    width: 25px;
    transition: all .5s;
    border-radius: 10px;
    overflow: hidden;
  }

  #sp-slt-{{ section.id }}[autoplaying] #sp-slt-snap-links-{{ section.id }} a[active]>span {
    display: block;
    background: {{ section.settings.progress_foreground_color }};
    height: 100%;
    animation: slpProgressBar {{ section.settings.autoplay_time }}ms ease-in-out;
    animation-fill-mode: both;
  }
</style>



<div id="sp-slt-{{ section.id }}" class="sp-slt-wrap">
  <div class="sp-slt-grid sp-slt-grid-{{ section.settings.slideshow_location }}">

    <div class="sp-slt-column sp-slt-column-text">
      <h2 class="heading">{{ section.settings.headline }}</h2>
      <p>{{ section.settings.content }}</p>
      {% if  section.settings.link  !=blank %}
      <p><a class="sp-slt-cta" href="{{ section.settings.link }}">{{ section.settings.link_text }}</a></p>
    </div>

    <div class="sp-slt-column sp-slt-column-slideshow">
      <div id="sp-slt-carousel-{{ section.id }}" class="sp-slt-carousel">
        {% for block in section.blocks %}
          <div class="sp-slt-slide" data-index="{{ forloop.index | minus: 1 }}">
            <div class="sp-slt-content">
              {% if block.type == 'video' %}
                {{
                  block.settings.video
                  | video_tag:
                    image_size: '1100x',
                    playsinline: block.settings.video_inline,
                    autoplay: block.settings.video_autoplay,
                    loop: block.settings.video_loop,
                    controls: block.settings.video_controls,
                    muted: block.settings.video_muted
                }}
              {% endif %}
              {% if block.type == 'image' %}
                <img loading="lazy"
                  src="{{ block.settings.image | image_url: width: 600 }}"
                  srcset="{{ block.settings.image| image_url: width: 600 }} 600w,
                    {{ block.settings.image | image_url: width: 800 }} 800w,
                    {{ block.settings.image | image_url: width: 1000 }} 1000w,
                    {{ block.settings.image | image_url: width: 1100 }} 1100w">
              {% endif %}
            </div>

            <div class="sp-slt-slide-text">
              <p>
                {{ block.settings.slide_text }}
              </p>
            </div>
          </div>
        {% endfor %}
      </div>
      <!-- /.sp-slt-carousel -->

      <div id="sp-slt-snap-links-{{ section.id }}" class="sp-slt-snap-links">
        {% for block in section.blocks %}
          <a data-index="{{ forloop.index | minus: 1 }}"><span></span></a>
        {% endfor %}
      </div>
    </div>
    
  </div>
</div>

<script>

  // create new Sections Pro slideshow
  class SpSlideShow_{{ short_id }} {

    constructor(section, carousel, enable_autoplay, autoplay_time, slides, links) {

      console.log(`[spslideshow] setup`);      

      this.section = section;
      this.carousel = carousel;
      this.slides = slides;
      this.links = links;
      this.index = 0;
      this.interval = null;
      this.observer = null;
      this.direction = 'up';
      this.autoplay_time = autoplay_time;
      this.autoplay_is_setup = false;

      // enable autoplay
      if(enable_autoplay) {
        console.log(`[spslideshow] enable auotplay`);  
        this.setupAutoplayObserver();
        this.setupClearEvents();
      }

      // setup links and observer
      this.setupLinks();
      this.setupObserver();
    }

    // don't start autoplay until the slideshow is visible
    setupAutoplayObserver() {
      var context = this;

      // use intersection observer to render dots
      this.observer = new IntersectionObserver(function(entries, observer) {

        // Loop over the entries
        entries.forEach(entry => {
          // If the element is visible
          if (entry.isIntersecting) {
            if(context.autoplay_is_setup == false) {
              context.setupAutoplay();
              context.autoplay_is_setup = true;
            }
          }
        });

      }, {
        threshold: 0.5
      });

      for (var i = 0; i < this.slides.length; i++) {
        this.observer.observe(this.carousel);
      }
    }

    // setup autoplay
    setupAutoplay() {

      var autoplay_time = this.autoplay_time;

      console.log(`[spslideshow] setup autoplay time = ${autoplay_time}`);  

      var context = this;
      context.section.setAttribute('autoplaying', '');

      this.interval = setInterval(function() {

        console.log('[context.index]', context.index);

        // handle next
        if(context.direction == 'up') context.index++;
        else context.index--;

        // rewind
        if(context.index == context.slides.length) {
          context.direction = 'down';
          context.index--;
        }
        else if(context.index < 0) {
          context.direction = 'up';
          context.index++;
        }

        // get slide
        var slide = context.slides[context.index];

        console.log('[next]', slide);

        if(slide) {

          console.log('[slide.offsetLeft]', slide.offsetLeft);

          context.carousel.scroll({
            behavior: 'smooth',
            left: slide.offsetLeft
          });
        }
        else {
          clearInterval(context.interval);
        }

      }, autoplay_time);
    }

    // setup events
    setupClearEvents() {
      var context = this;

      this.carousel.addEventListener('mousedown', (e) => {
        context.clearInterval();
      });

      this.carousel.addEventListener('touchstart', (e) => {
        context.clearInterval();
      });
    }

    // cancel the interval timer
    clearInterval() {
      if(this.interval) clearInterval(this.interval);
      this.section.removeAttribute('autoplaying');
    }

    // setup navigation links
    setupLinks() {

      var context = this;

      for(var x=0; x<this.links.length; x++) {

        // handle click of links
        this.links[x].addEventListener('click', (e) => {

            // clear interval
            context.clearInterval();

            var index = parseInt(e.target.getAttribute(`data-index`));
            var slide = null;

            for(x=0; x<context.slides.length; x++) {
              var i = parseInt(context.slides[x].getAttribute('data-index')) || 0;
              if(i==index) slide = context.slides[x];
            }

            if(slide) {
              context.carousel.scroll({
                behavior: 'smooth',
                left: slide.offsetLeft
              });
            }

            e.preventDefault();
        });
      }

    }

    // set active link
    setActiveLink(index) {
      for(var y=0; y<this.links.length; y++) this.links[y].removeAttribute('active');

      // set all active
      for(var y=0; y<this.links.length; y++) {
        if(this.links[y].hasAttribute('data-index')) {
          var i = parseInt(this.links[y].getAttribute('data-index'));
          if(i == index) this.links[y].setAttribute('active', '');
        }
      }

    }

    // setup observer
    setupObserver() {

      var context = this;

      // use intersection observer to render dots
      this.observer = new IntersectionObserver(function(entries, observer) {

        // Loop over the entries
        entries.forEach(entry => {
          // If the element is visible
          if (entry.isIntersecting) {
            var index = parseInt(entry.target.getAttribute('data-index')) || 0;
            context.setActiveLink(index);
          }
        });

      }, {
        root: context.carousel, threshold: 0.5
      });

      for (var i = 0; i < this.slides.length; i++) {
        this.observer.observe(this.slides[i]);
      }

    }

  }
  // end SpSlideShow class
  
  var section_{{ short_id }} = document.querySelector('#sp-slt-{{ section.id }}');
  var carousel_{{ short_id }} = document.querySelector(`#sp-slt-carousel-{{ section.id }}`);
  var slides_{{ short_id }} = section_{{ short_id }}.querySelectorAll('.sp-slt-slide');
  var links_{{ short_id }} = section_{{ short_id }}.querySelectorAll('.sp-slt-snap-links a');
  
  new SpSlideShow_{{ short_id }}(section_{{ short_id }}, carousel_{{ short_id }}, {{ section.settings.enable_autoplay }}, {{ section.settings.autoplay_time }}, slides_{{ short_id }}, links_{{ short_id }});
  
</script>

{% schema %}
  {
    "name": "ðSP - Slideshow Text",
    "settings": [
      {
        "type": "header",
        "content": "Text",
        "info": "Set the text size for your widget"
      },
      {
        "type": "font_picker",
        "id": "text_font",
        "label": "Text Font",
        "default": "sans-serif"
      },
      {
        "type": "range",
        "id": "text_size",
        "min": 10,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Text Size",
        "default": 15
      },
      {
        "type": "font_picker",
        "id": "headline_font",
        "label": "Headline Font",
        "default": "sans-serif"
      },
      {
        "type": "range",
        "id": "headline_size",
        "min": 10,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Headline Size",
        "default": 25
      },
      {
        "type": "header",
        "content": "Colors",
        "info": "Set colors for the section."
      },
      {
        "type": "color_background",
        "id": "background_color",
        "default": "linear-gradient(164deg, #FFF 0%, #FFF 100%)",
        "label": "Background Color"
      },
      {
        "type": "color",
        "id": "caption_text_color",
        "default": "#111",
        "label": "Caption Text Color"
      },
      {
        "type": "color_background",
        "id": "caption_background_color",
        "default": "linear-gradient(177deg, rgba(255, 255, 255, .5) 3%, rgba(255, 255, 255, .85) 100%)",
        "label": "Caption Background Color"
      },
      {
        "type": "color_background",
        "id": "progress_background_color",
        "default": "linear-gradient(177deg, rgba(17, 17, 17, .25) 3%, rgba(17, 17, 17, 0.25) 100%)",
        "label": "Progress Background Color"
      },
      {
        "type": "color_background",
        "id": "progress_foreground_color",
        "default": "linear-gradient(177deg, rgba(17, 17, 17, 1) 3%, rgba(17, 17, 17, 1) 100%)",
        "label": "Progress Foreground Color"
      },
      {
        "type": "color",
        "id": "indicator_color",
        "default": "#111",
        "label": "Indicator Color"
      },
      {
        "type": "color",
        "id": "text_color",
        "default": "#111111",
        "label": "Text Color"
      },
      {
        "type": "header",
        "content": "Button Style",
        "info": "Set the look and feel of the button"
      },
      {
        "type": "color_background",
        "id": "button_background_color",
        "default": "linear-gradient(164deg, #111 0%, #333 100%)",
        "label": "Button Background Color"
      },
      {
        "type": "color",
        "id": "button_text_color",
        "default": "#fff",
        "label": "Button Text Color"
      },
      {
        "type": "range",
        "id": "button_text_size",
        "min": 10,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Text Size",
        "default": 15
      },
      {
        "type": "number",
        "id": "button_padding_tb",
        "default": 10,
        "label": "Padding Top/Bottom"
      },
      {
        "type": "number",
        "id": "button_padding_lr",
        "default": 25,
        "label": "Padding Left/Right"
      },
      {
        "type": "number",
        "id": "button_border_radius",
        "default": 5,
        "label": "Border Radius"
      },
      {
        "type": "header",
        "content": "Dimensions",
        "info": "Set the section dimensions in pixels."
      },
      {
        "type": "number",
        "id": "max_width",
        "default": 1000,
        "label": "Max Width of Section"
      },
      {
        "type": "number",
        "id": "padding_top",
        "default": 25,
        "label": "Padding Top"
      },
      {
        "type": "number",
        "id": "padding_bottom",
        "default": 25,
        "label": "Padding Bottom"
      },
      {
        "type": "number",
        "id": "padding_left",
        "default": 10,
        "label": "Padding Left"
      },
      {
        "type": "number",
        "id": "padding_right",
        "default": 10,
        "label": "Padding Right"
      },
      {
        "type": "header",
        "content": "Content",
        "info": "Set content for the section"
      },
      {
        "type": "select",
        "id": "slideshow_location",
        "label": "Slideshow Location",
        "options": [
          {
            "value": "left",
            "label": "Left"
          },
          {
            "value": "right",
            "label": "Right"
          }
        ],
        "default": "right"
      },
      {
        "type": "inline_richtext",
        "id": "headline",
        "label": "Headline",
        "default": "Sample headline"
      },
      {
        "type": "inline_richtext",
        "id": "content",
        "label": "Content",
        "default": "Sample content"
      },
      {
        "type": "text",
        "id": "link_text",
        "label": "Link Text",
        "default": "Shop More"
      },
      {
        "type": "url",
        "id": "link",
        "label": "Link"
      },
      {
        "type": "header",
        "content": "Slideshow",
        "info": "Set settings for your slideshow"
      },
      {
        "type": "range",
        "id": "media_radius",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Round Borders on Media",
        "default": 5
      },
      {
        "type": "checkbox",
        "id": "media_shadow",
        "default": true,
        "label": "Subtle Shadow on Media"
      },
      {
        "type": "select",
        "id": "media_aspect_ratio",
        "default": "4 / 3",
        "label": "Media Aspect Ratio",
        "options": [
          {
            "value": "21 / 9",
            "label": "21:9"
          },
          {
            "value": "16 / 9",
            "label": "16:9"
          },
          {
            "value": "4 / 3",
            "label": "4:3"
          },
          {
            "value": "1 / 1",
            "label": "1:1"
          }
        ],
        "default": "4 / 3"
      },
      {
        "type": "checkbox",
        "id": "enable_autoplay",
        "default": true,
        "label": "Enable Autoplay?"
      },
      {
        "type": "select",
        "id": "autoplay_time",
        "label": "Autoplay Time",
        "options": [
          {
            "value": "10000",
            "label": "Slowest (10s)"
          },
          {
            "value": "7500",
            "label": "Slower (7.5s)"
          },
          {
            "value": "5000",
            "label": "Normal (5s)"
          },
          {
            "value": "3000",
            "label": "Faster (3s)"
          },
          {
            "value": "2000",
            "label": "Fastest (2s)"
          }
        ],
        "default": "5000"
      }
    ],
    "blocks": [
      {
        "name": "Image",
        "type": "image",
        "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
          {
            "type": "inline_richtext",
            "id": "slide_text",
            "label": "Caption",
            "default": "Use this field to caption your slide"
          }
        ]
      },
      {
        "name": "Video",
        "type": "video",
        "settings": [
          {
            "type": "video",
            "id": "video",
            "label": "Video"
          },
          {
            "type": "inline_richtext",
            "id": "slide_text",
            "label": "Caption",
            "default": "Use this field to caption your slide"
          },
          {
            "type": "checkbox",
            "id": "video_inline",
            "label": "Play Inline",
            "default": true
          },
          {
            "type": "checkbox",
            "id": "video_autoplay",
            "label": "Autoplay",
            "default": true
          },
          {
            "type": "checkbox",
            "id": "video_loop",
            "label": "Loop Video",
            "default": true
          },
          {
            "type": "checkbox",
            "id": "video_controls",
            "label": "Show Video Controls",
            "default": false
          },
          {
            "type": "checkbox",
            "id": "video_muted",
            "label": "Mute Video",
            "default": true
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "ðSP - Slideshow Text",
        "blocks": [
          {
            "type": "image"
          },
          {
            "type": "image"
          },
          {
            "type": "image"
          }
        ]
      }
    ]
  }
{% endschema %}